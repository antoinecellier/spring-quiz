<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
 

		<intercept-url pattern="/admin*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/user*" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
		<intercept-url pattern="/login" access="isAnonymous()" />
 		 		
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
 
		<logout invalidate-session="true" logout-success-url="/login" logout-url="/logout"></logout>
  		<form-login authentication-success-handler-ref="authenticationSuccessRedirecthandler" 
  					login-page="/login"
  					authentication-failure-url="/login?error" 
  					username-parameter="username"
					password-parameter="password"
  		/>
<!--   		<session-management invalid-session-url="/profile/log"></session-management> -->

		<!-- enable csrf protection -->
		<csrf/>
	</http>
 
 <beans:bean class="org.dnr.devoir.controller.CustomAuthenticationHandler" id="authenticationSuccessRedirecthandler">
 </beans:bean>
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username, password, enabled from Utilisateurs where username=?"
		  authorities-by-username-query=
		    "select username, role from Utilisateurs where username =?  " />
	  </authentication-provider>
	</authentication-manager>
 
</beans:beans>